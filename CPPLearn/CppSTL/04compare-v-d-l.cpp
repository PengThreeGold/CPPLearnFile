#include <iostream>
#include <vector>
#include <queue>
#include <list>

/*
 * 容器的纵向考察：容器掌握的深度
 * 容器的横向考察：各个相似容器之间的对比
 * 
 * vector 特点：动态数组，内存是连续的，2倍的方式进行扩容。
 * vector<int> vec; // 0-1-2-4-6-……
 * vec.reserve(size); // 预留size大小空间
 * 
 * deque 特点：动态开辟的二维数组空间，第二维是固定长度的数组空间，
 * 扩容的时候（第一维的数组进行2倍扩容）
 * 
 * 问题：deque 底层内存是否是连续的？
 * 答：不是，每一个第二维是连续的（分段连续）。
 * 
 * vector 和 deque 之间的区别？
 * 1、底层数据结构：vector是动态开辟的一维数组，deque是动态开辟的二维数组；
 * 2、前中后插入删除的时间复杂度：中间、末尾的插入删除分别是O(n)、O(1)，首插入删除 deque O(1) vector O(n)；
 * 3、对于内存的使用效率：vector（扩容）需要的一片连续的内存空间，deque可以分块进行数据存储；
 * 4、在中间进行insert或者erase，时间复杂度都是O(n)，但是vector（连续内存空间）更易于挪动，而deque（第二维内存空间不连续）则更不易于挪动；
 * 
 * vector 和 list 之间的区别？   （数组增加删除O(n)、查询O(n)、查询O(n)、随机访问<下标访问>O(1) 跟 链表 增加删除<考虑搜索的时间>O(1)、的区别）
 * 1、底层数据结构：数组、双向循环链表
 */